#!/usr/bin/env python2
# -*- coding: utf-8 -*-

"""

    this module will test all the aspect of SEF


    build:  2016/5/7
    author: smileboywtu

"""

import os
import sys
import argparse
from plot import show
from test import (
    test_suit, test_binary, test_zip
)


def get_parser():
    """add all the argument

    """
    # create parser
    parser = argparse.ArgumentParser(description='Tester for the SEF(symmtry encryption based on fountain code)')
    # add argument
    parser.add_argument('--test', action='store_true', help='run test for SEF')
    parser.add_argument('--plot', action='store_true', help='show all the result in same plot')
    parser.add_argument('--binary', action='store_true', help='test for binary file')
    parser.add_argument('--compress', action='store_true', help='test for compress file')

    return parser


def main():
    """tester enter

    @func
        key -- test for all the keys

    """
    parser = get_parser()
    # parse the argument
    args = vars(parser.parse_args())

    if args['test']:
        test_suit()

    if args['plot']:
        show()

    if args['binary']:
        test_binary()

    if args['compress']:
        test_zip()


if __name__ == '__main__':
    main()
